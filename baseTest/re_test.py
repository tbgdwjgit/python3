__author__ = 'Test-YLL'
# -*- coding:utf-8 -*-

import  re

"""
    表示择一匹配的管道符号（|），也就是键盘上的竖线，表示一个“从多个模式中选择其一”的操作。
"""
'''
常用的正则表达式

验证数字类型输入
数字：^[0-9]*$
n位的数字：^\d{n}$
至少n位的数字：^\d{n,}$
m-n位的数字：^\d{m,n}$
零和非零开头的数字：^(0|[1-9][0-9]*)$
非零开头的最多带两位小数的数字：^([1-9][0-9]*)+(.[0-9]{1,2})?$
带1-2位小数的正数或负数：^(\-)?\d+(\.\d{1,2})?$
正数、负数、和小数：^(\-|\+)?\d+(\.\d+)?$
有两位小数的正实数：^[0-9]+(.[0-9]{2})?$
有1~3位小数的正实数：^[0-9]+(.[0-9]{1,3})?$
非零的正整数：^[1-9]\d*$ 或 ^([1-9][0-9]*){1,3}$ 或 ^\+?[1-9][0-9]*$
非零的负整数：^\-[1-9][]0-9″*$ 或 ^-[1-9]\d*$
非负整数：^\d+$ 或 ^[1-9]\d*|0$
非正整数：^-[1-9]\d*|0$ 或 ^((-\d+)|(0+))$
非负浮点数：^\d+(\.\d+)?$ 或 ^[1-9]\d*\.\d*|0\.\d*[1-9]\d*|0?\.0+|0$
非正浮点数：^((-\d+(\.\d+)?)|(0+(\.0+)?))$ 或 ^(-([1-9]\d*\.\d*|0\.\d*[1-9]\d*))|0?\.0+|0$
正浮点数：^[1-9]\d*\.\d*|0\.\d*[1-9]\d*$ 或 ^(([0-9]+\.[0-9]*[1-9][0-9]*)|([0-9]*[1-9][0-9]*\.[0-9]+)|([0-9]*[1-9][0-9]*))$
负浮点数：^-([1-9]\d*\.\d*|0\.\d*[1-9]\d*)$ 或 ^(-(([0-9]+\.[0-9]*[1-9][0-9]*)|([0-9]*[1-9][0-9]*\.[0-9]+)|([0-9]*[1-9][0-9]*)))$
浮点数：^(-?\d+)(\.\d+)?$ 或 ^-?([1-9]\d*\.\d*|0\.\d*[1-9]\d*|0?\.0+|0)$

验证字串类型输入
汉字：^[\u4e00-\u9fa5]+$
英文和数字：^[A-Za-z0-9]+$ 或 ^[A-Za-z0-9]{4,40}$
长度为3-20的所有字符：^.{3,20}$
由26个英文字母组成的字符串：^[A-Za-z]+$
由26个大写英文字母组成的字符串：^[A-Z]+$
由26个小写英文字母组成的字符串：^[a-z]+$
由数字和26个英文字母组成的字符串：^[A-Za-z0-9]+$
由数字、26个英文字母或者下划线组成的字符串：^\w+$ 或 ^\w{3,20}$
中文、英文、数字包括下划线：^[\u4E00-\u9FA5A-Za-z0-9_]+$
中文、英文、数字但不包括下划线等符号：^[\u4E00-\u9FA5A-Za-z0-9]+$ 或 ^[\u4E00-\u9FA5A-Za-z0-9]{2,20}$
可以输入含有^%&’,;=?$\”等字符：[^%&',;=?$\x22]+
禁止输入含有~的字符：[^~\x22]+

验证特殊类型输入
Email地址：^\w+([-+.]\w+)*@\w+([-.]\w+)*\.\w+([-.]\w+)*$
域名：[a-zA-Z0-9][-a-zA-Z0-9]{0,62}(/.[a-zA-Z0-9][-a-zA-Z0-9]{0,62})+/.?
InternetURL：[a-zA-z]+://[^\s]* 或 ^http://([\w-]+\.)+[\w-]+(/[\w-./?%&=]*)?$
手机号码：^(13[0-9]|14[5|7]|15[0|1|2|3|5|6|7|8|9]|18[0|1|2|3|5|6|7|8|9])\d{8}$
电话号码(“XXX-XXXXXXX”、”XXXX-XXXXXXXX”、”XXX-XXXXXXX”、”XXX-XXXXXXXX”、”XXXXXXX”和”XXXXXXXX)：^($$\d{3,4}-)|\d{3.4}-)?\d{7,8}$
国内电话号码(0511-4405222、021-87888822)：\d{3}-\d{8}|\d{4}-\d{7}
身份证号(15位、18位数字)：^\d{15}|\d{18}$
短身份证号码(数字、字母x结尾)：^([0-9]){7,18}(x|X)?$ 或 ^\d{8,18}|[0-9x]{8,18}|[0-9X]{8,18}?$
帐号是否合法(字母开头，允许5-16字节，允许字母数字下划线)：^[a-zA-Z][a-zA-Z0-9_]{4,15}$
密码(以字母开头，长度在6~18之间，只能包含字母、数字和下划线)：^[a-zA-Z]\w{5,17}$
强密码(必须包含大小写字母和数字的组合，不能使用特殊字符，长度在8-10之间)：^(?=.*\d)(?=.*[a-z])(?=.*[A-Z]).{8,10}$
日期格式：^\d{4}-\d{1,2}-\d{1,2}
一年的12个月(01～09和1～12)：^(0?[1-9]|1[0-2])$
一个月的31天(01～09和1～31)：^((0?[1-9])|((1|2)[0-9])|30|31)$
钱的输入格式：1到3个数字，后面跟着任意个逗号+3个数字，逗号成为可选，而不是必须。小数可有可无，但最多2位：^([0-9]+|[0-9]{1,3}(,[0-9]{3})*)(.[0-9]{1,2})?$
xml文件：^([a-zA-Z]+-?)+[a-zA-Z0-9]+\\.[x|X][m|M][l|L]$
中文字符的正则表达式：[\u4e00-\u9fa5]
双字节字符：[^\x00-\xff]
空白行的正则表达式：\n\s*\r
HTML标记的正则表达式：<(\S*?)[^>]*>.*?</\1>|<.*? />
首尾空白字符的正则表达式：^\s*|\s*$或(^\s*)|(\s*$)
腾讯QQ号：[1-9][0-9]{4,}
中国邮政编码：[1-9]\d{5}(?!\d)
IPv4地址：\d+\.\d+\.\d+\.\d+
IPv4地址：((?:(?:25[0-5]|2[0-4]\\d|[01]?\\d?\\d)\\.){3}(?:25[0-5]|2[0-4]\\d|[01]?\\d?\\d))

'''

# m = re.match('f...','fo#d.fdo')
# m = re.match('\d{3}.\d{3}.\d{3}.\d{3}','122.122.122.122')
# m = re.match('b[aie]r','barbir')
# m = re.search('bar','ffbarberffbir')
# print(m.group())
# print(m.groups())


# # m = re.match('fo','fo#d.fdowqqqqqqqqqqqq')
# m = re.search('fo','wwwwwwwwwfo#d.fdowqqqqqqqqqqqq')
# m = re.match('\w+@(\w+\.)?\w+\.com','1eee@163.com')
# if m is not None:
#     print(m.group())

m = re.match('^[0-9]*$','333')
if m is not None:
    print(m.group())

# m = re.match('(\w\w\w)-(\d\d\d)','abc-123')
# if m is not None:
#     print(m.group())
#     print(m.group(1))
#     print(m.group(2))
#     print(m.groups())

m = re.split('\.','135.33.33.33')
print(m)
print('135.33.33.33'.split('.'))

f = open('whodata.txt', 'r')
for eachLine in f:
    print(re.split(r'\s\s+', eachLine))
f.close()

m = re.search('[bh][aie]r','ddhir')
m= re.match('[A-Za-z-]+ [A-Za-z-]+','Jack-w Tom-w')
m= re.match('[A-Za-z-]+, [A-Za-z]','Jack-w, Tom-w')
if m is not None:
    print(m.group())


'''预编译全局匹配 '''
string ='hellomypythonhispythonourpythonend'
pattern = re.compile('.python.')
result = pattern.findall(string)
print(result)

'''替换'''
string ='hellomypythonhispythonourpythonend'
pattern = 'python.'
result1=re.sub(pattern,'php',string)
result2=re.sub(pattern, 'php',string,2)
print(result1)
print(result2)

'''网址'''
pattern = "[a-zA-Z]+://[^\s]*[.com|.cn]"
string = "<a href='http://www.baidu.com.cn'>百度首页</a>"
result = re.search(pattern,string)
print(result)
'''电话号码'''
pattern = "\d{4}-\d{8}|\d{4}-\d{7}|\d{3}-\d{8}"
string = "021-12345678"
string = "0571-1234567"
string = "0571-12345678"
result = re.search(pattern,string)
print(result)
'''邮件地址'''
pattern = "\w+([.+-]\w+)*@\w+([.-]\w+)*\.\w+([.-]\w+)*"
string = "<a href='mailto:c-e+o@iqi-anyue.com.cn'>电子邮件地址</a>"
result = re.search(pattern,string)
print(result)


